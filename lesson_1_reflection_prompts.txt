How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    it is easy to find what we have edit or changed
    don't have to go through all the code

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    when we have some new ideas and wanna start from the previous versions
    when we have found some problems in current solutions and want to restart

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Git: 
    pros: self determine whether the revesion is worth commiting,make more sense
    cons: sometimes too lazy to commit some change, then get confused by the 
    different versions
    Google:
    pros: record all changes, dont have to do it mannually,dont have to worry about
    forgetting upload new code
    cons: can't determine whether it is proper to commit new version. hard to make clear 
    the relationships

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    because in programming, functions are coded in diffrent files, and sometimes
    the call each other or embeded into each other,so they have to be changed 
    simutaneously

How can you use the commands git log and git diff to view the history of files?

    git log to view all the commit,and specify the version you want to compare
    git diff to view the different between to version

How might using version control make you more confident to make changes that
could break something?

    because I dont have to worry about losing the progress before, if the damege
    is detected, I can checkout to the former version.

Now that you have your workspace set up, what do you want to try using Git for?

    visual servo code management
